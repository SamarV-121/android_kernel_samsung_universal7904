/*
 * SAMSUNG EXYNOS7885 board camera device tree source
 *
 * Copyright (c) 2018 Samsung Electronics Co., Ltd.
 *		http://www.samsung.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <dt-bindings/camera/fimc_is.h>

/ {
	fragment@camera {
		target-path = "/";
		__overlay__ {

			/* REAR CAMERA */
			fimc_is_sensor_2p6: fimc-is_sensor_2p6@5A {
				compatible = "samsung,sensor-module-2p6";

				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&fimc_is_mclk0_out>;
				pinctrl-2 = <&fimc_is_mclk0_fn>;
				pinctrl-3 = <>;

				position = <0>;	/* Rear:0. Front:1 */
				id = <0>; /* bns_id */
				mclk_ch = <0>;

				gpio_mclk = <&gpc0 0 0x1>;
				gpio_reset = <&gpq0 1 0x1>; /* sensor reset */
				gpio_core_en = <&gpp0 2 0x1>; /* RCAM_LDO_EN */
				gpio_cam_io_en = <&gpg2 0 0x1>; /* RCAM_IO_LDO_EN */
				gpio_cam_af_en = <&gpp0 3 0x1>; /* RCAM_AF_2P8_EN */
				status = "okay";

				af {
					product_name = <16>; /* AK7372 */
					i2c_addr = <0x18>;
					i2c_ch = <3>;
				};

				flash {
					product_name = <11>; /* FLASH_GPIO */
					flash_first_gpio = <1>; /* DICO not use first, second gpio value */
					flash_second_gpio = <0>;
				};

				internal_vc {
					vc_list = <1 1 0>;
				};
			};

			/* FRONT CAMERA */
			fimc_is_sensor_3p8sp: fimc-is_sensor_3p8sp@5A {
				compatible = "samsung,sensor-module-3p8sp";

				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&fimc_is_mclk1_out>;
				pinctrl-2 = <&fimc_is_mclk1_fn>;
				pinctrl-3 = <>;

				position = <1>;	/* Rear:0. Front:1 */
				id = <1>; /* bns_id */
				mclk_ch = <1>;

				gpio_mclk = <&gpc0 1 0x1>;
				gpio_reset = <&gpf3 0 0x1>;	/* sensor reset */
				gpio_ldos_en = <&gpp0 0 0x1>;	/* all LDOs */
				status = "okay";
			};

			/* FRONT2(FRONT SUB) CAMERA */
			fimc_is_sensor_sr846: fimc-is_sensor_sr846@5A {
				compatible = "samsung,sensor-module-sr846";

				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&fimc_is_mclk2_out>;
				pinctrl-2 = <&fimc_is_mclk2_fn>;
				pinctrl-3 = <>;

				position = <2>;	/* Rear:0. Front:1 */
				id = <2>; /* bns_id */
				mclk_ch = <2>;

				gpio_mclk = <&gpc0 2 0x1>;
				gpio_reset = <&gpf3 1 0x1>;	/* sensor reset */
				gpio_ldos_en = <&gpp0 1 0x1>;	/* all LDOs */
				status = "okay";
			};

			/* FLASH MODULE */
			fimc_is_flash_gpio: fimc-is-flash_gpio@0 {
				compatible = "samsung,sensor-flash-gpio";
				id = <0>; /* matching sensor id */
				status = "okay";

				flash-gpio = <&gpg1 2 0x1>;
			};

		}; /* end of __overlay__ */
	}; /* end of fragment */
}; /* end of root */


/***** reference symbol node *****/

&fimc_is {
	pinctrl-names = "default","release";
	pinctrl-0 = <>;
	pinctrl-1 = <>;

	vender {
		rear_sensor_id = <58>; /* 2P6 */
		front_sensor_id = <44>; /* 3P8SP */
		//use_module_check;
		skip_cal_loading;
	};

	fimc_is_dvfs {
		/* TODO: DVFS level set */
		#define DVFS_INT_L0 533000
		#define DVFS_INT_L1 333000
		#define DVFS_INT_L2 267000
		#define DVFS_INT_L3 133000
		#define DVFS_INT_L4 107000

		#define DVFS_CAM_L0 690000
		#define DVFS_CAM_L1 680000
		#define DVFS_CAM_L2 670000
		#define DVFS_CAM_L3 660000
		#define DVFS_CAM_L4 650000

		#define DVFS_MIF_L0 2093000
		#define DVFS_MIF_L1 2002000
		#define DVFS_MIF_L2 1794000
		#define DVFS_MIF_L3 1539000
		#define DVFS_MIF_L4 1352000
		#define DVFS_MIF_L5 1014000
		#define DVFS_MIF_L6 845000
		#define DVFS_MIF_L7 676000
		#define DVFS_MIF_L8 546000
		#define DVFS_MIF_L9 420000

		table0 {
			desc = "default";

			default_int = <DVFS_INT_L0>;
			default_cam = <DVFS_CAM_L0>;
			default_mif = <DVFS_MIF_L5>;
			default_i2c = <0>;

			front_preview_int = <DVFS_INT_L4>;
			front_preview_cam = <DVFS_CAM_L2>;
			front_preview_mif = <DVFS_MIF_L5>;
			front_preview_i2c = <0>;

			front_capture_int = <DVFS_INT_L4>;
			front_capture_cam = <DVFS_CAM_L2>;
			front_capture_mif = <DVFS_MIF_L5>;
			front_capture_i2c = <0>;

			front_video_int = <DVFS_INT_L4>;
			front_video_cam = <DVFS_CAM_L2>;
			front_video_mif = <DVFS_MIF_L5>;
			front_video_i2c = <0>;

			front_vt1_int = <DVFS_INT_L4>;
			front_vt1_cam = <DVFS_CAM_L3>;
			front_vt1_mif = <DVFS_MIF_L7>;
			front_vt1_i2c = <0>;

			front_vt2_int = <DVFS_INT_L4>;
			front_vt2_cam = <DVFS_CAM_L3>;
			front_vt2_mif = <DVFS_MIF_L7>;
			front_vt2_i2c = <0>;

			front_vt4_int = <DVFS_INT_L4>;
			front_vt4_cam = <DVFS_CAM_L3>;
			front_vt4_mif = <DVFS_MIF_L7>;
			front_vt4_i2c = <0>;

			rear_preview_fhd_int = <DVFS_INT_L4>;
			rear_preview_fhd_cam = <DVFS_CAM_L2>;
			rear_preview_fhd_mif = <DVFS_MIF_L4>;
			rear_preview_fhd_i2c = <0>;

			rear_capture_int = <DVFS_INT_L4>;
			rear_capture_cam = <DVFS_CAM_L1>;
			rear_capture_mif = <DVFS_MIF_L3>;
			rear_capture_i2c = <0>;

			rear_video_fhd_int = <DVFS_INT_L4>;
			rear_video_fhd_cam = <DVFS_CAM_L2>;
			rear_video_fhd_mif = <DVFS_MIF_L4>;
			rear_video_fhd_i2c = <0>;

			rear_video_uhd_int = <DVFS_INT_L4>;
			rear_video_uhd_cam = <DVFS_CAM_L2>;
			rear_video_uhd_mif = <DVFS_MIF_L1>;
			rear_video_uhd_i2c = <0>;

			rear_video_fhd_capture_int = <DVFS_INT_L4>;
			rear_video_fhd_capture_cam = <DVFS_CAM_L1>;
			rear_video_fhd_capture_mif = <DVFS_MIF_L3>;
			rear_video_fhd_capture_i2c = <0>;

			rear_video_uhd_capture_int = <DVFS_INT_L4>;
			rear_video_uhd_capture_cam = <DVFS_CAM_L0>;
			rear_video_uhd_capture_mif = <DVFS_MIF_L0>;
			rear_video_uhd_capture_i2c = <0>;

			dual_preview_int = <DVFS_INT_L4>;
			dual_preview_cam = <DVFS_CAM_L0>;
			dual_preview_mif = <DVFS_MIF_L4>;
			dual_preview_i2c = <0>;

			dual_capture_int = <DVFS_INT_L4>;
			dual_capture_cam = <DVFS_CAM_L0>;
			dual_capture_mif = <DVFS_MIF_L4>;
			dual_capture_i2c = <0>;

			dual_video_int = <DVFS_INT_L4>;
			dual_video_cam = <DVFS_CAM_L0>;
			dual_video_mif = <DVFS_MIF_L4>;
			dual_video_i2c = <0>;

			preview_high_speed_fps_int = <DVFS_INT_L4>;
			preview_high_speed_fps_cam = <DVFS_CAM_L2>;
			preview_high_speed_fps_mif = <DVFS_MIF_L5>;
			preview_high_speed_fps_i2c = <0>;

			video_high_speed_60fps_int = <DVFS_INT_L4>;
			video_high_speed_60fps_cam = <DVFS_CAM_L2>;
			video_high_speed_60fps_mif = <DVFS_MIF_L5>;
			video_high_speed_60fps_i2c = <0>;

			video_high_speed_120fps_int = <DVFS_INT_L4>;
			video_high_speed_120fps_cam = <DVFS_CAM_L2>;
			video_high_speed_120fps_mif = <DVFS_MIF_L5>;
			video_high_speed_120fps_i2c = <0>;

			max_int = <DVFS_INT_L0>;
			max_cam = <DVFS_CAM_L0>;
			max_mif = <DVFS_MIF_L5>;
			max_i2c = <0>;
		};

		table1 {
			desc = "DVFS table for HAL3";

			default_int = <DVFS_INT_L0>;
			default_cam = <DVFS_CAM_L0>;
			default_mif = <DVFS_MIF_L5>;
			default_i2c = <0>;

			front_preview_int = <DVFS_INT_L4>;
			front_preview_cam = <DVFS_CAM_L2>;
			front_preview_mif = <DVFS_MIF_L5>;
			front_preview_i2c = <0>;

			front_capture_int = <DVFS_INT_L4>;
			front_capture_cam = <DVFS_CAM_L2>;
			front_capture_mif = <DVFS_MIF_L5>;
			front_capture_i2c = <0>;

			front_video_int = <DVFS_INT_L4>;
			front_video_cam = <DVFS_CAM_L2>;
			front_video_mif = <DVFS_MIF_L5>;
			front_video_i2c = <0>;

			front_vt1_int = <DVFS_INT_L4>;
			front_vt1_cam = <DVFS_CAM_L3>;
			front_vt1_mif = <DVFS_MIF_L5>;
			front_vt1_i2c = <0>;

			front_vt2_int = <DVFS_INT_L4>;
			front_vt2_cam = <DVFS_CAM_L3>;
			front_vt2_mif = <DVFS_MIF_L5>;
			front_vt2_i2c = <0>;

			front_vt4_int = <DVFS_INT_L4>;
			front_vt4_cam = <DVFS_CAM_L3>;
			front_vt4_mif = <DVFS_MIF_L5>;
			front_vt4_i2c = <0>;

			rear_preview_fhd_int = <DVFS_INT_L4>;
			rear_preview_fhd_cam = <DVFS_CAM_L0>;
			rear_preview_fhd_mif = <DVFS_MIF_L2>;
			rear_preview_fhd_i2c = <0>;

			rear_capture_int = <DVFS_INT_L4>;
			rear_capture_cam = <DVFS_CAM_L0>;
			rear_capture_mif = <DVFS_MIF_L2>;
			rear_capture_i2c = <0>;

			rear_video_fhd_int = <DVFS_INT_L4>;
			rear_video_fhd_cam = <DVFS_CAM_L0>;
			rear_video_fhd_mif = <DVFS_MIF_L2>;
			rear_video_fhd_i2c = <0>;

			rear_video_uhd_int = <DVFS_INT_L4>;
			rear_video_uhd_cam = <DVFS_CAM_L2>;
			rear_video_uhd_mif = <DVFS_MIF_L1>;
			rear_video_uhd_i2c = <0>;

			rear_video_fhd_capture_int = <DVFS_INT_L4>;
			rear_video_fhd_capture_cam = <DVFS_CAM_L1>;
			rear_video_fhd_capture_mif = <DVFS_MIF_L3>;
			rear_video_fhd_capture_i2c = <0>;

			rear_video_uhd_capture_int = <DVFS_INT_L4>;
			rear_video_uhd_capture_cam = <DVFS_CAM_L0>;
			rear_video_uhd_capture_mif = <DVFS_MIF_L0>;
			rear_video_uhd_capture_i2c = <0>;

			dual_preview_int = <DVFS_INT_L4>;
			dual_preview_cam = <DVFS_CAM_L0>;
			dual_preview_mif = <DVFS_MIF_L4>;
			dual_preview_i2c = <0>;

			dual_capture_int = <DVFS_INT_L4>;
			dual_capture_cam = <DVFS_CAM_L0>;
			dual_capture_mif = <DVFS_MIF_L4>;
			dual_capture_i2c = <0>;

			dual_video_int = <DVFS_INT_L4>;
			dual_video_cam = <DVFS_CAM_L0>;
			dual_video_mif = <DVFS_MIF_L4>;
			dual_video_i2c = <0>;

			preview_high_speed_fps_int = <DVFS_INT_L4>;
			preview_high_speed_fps_cam = <DVFS_CAM_L2>;
			preview_high_speed_fps_mif = <DVFS_MIF_L5>;
			preview_high_speed_fps_i2c = <0>;

			video_high_speed_60fps_int = <DVFS_INT_L4>;
			video_high_speed_60fps_cam = <DVFS_CAM_L3>;
			video_high_speed_60fps_mif = <DVFS_MIF_L5>;
			video_high_speed_60fps_i2c = <0>;

			video_high_speed_120fps_int = <DVFS_INT_L4>;
			video_high_speed_120fps_cam = <DVFS_CAM_L2>;
			video_high_speed_120fps_mif = <DVFS_MIF_L5>;
			video_high_speed_120fps_i2c = <0>;

			max_int = <DVFS_INT_L0>;
			max_cam = <DVFS_CAM_L0>;
			max_mif = <DVFS_MIF_L5>;
			max_i2c = <0>;
		};
	};
};

&fimc_is_sensor0 {
	scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
	id = <0>;
	csi_ch = <1>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	is_flite = <0>;
	status = "okay";

	use_ssvc1_internal;
};

&fimc_is_sensor1 {
	scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
	id = <1>;
	csi_ch = <0>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	is_flite = <0>;
	status = "okay";
};

&fimc_is_sensor2 {
	scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
	id = <2>;
	csi_ch = <2>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	is_flite = <0>;
	status = "okay";
};

&hsi2c_0 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpc1 0 0 &gpc1 1 0>;
	status = "okay";
	clock-frequency = <400000>;

	pinctrl-names = "on_i2c";
	pinctrl-0 = <&hs_i2c0_bus>;

	fimc-is-3p8sp@2D {
	     compatible = "samsung,exynos5-fimc-is-cis-3p8sp";
	     reg = <0x10>; /* 1 bit right shift */
	     id = <1>; /* matching sensor id */
	     setfile = "setB";
	};
};

&hsi2c_1 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpc1 2 0 &gpc1 3 0>;
	status = "okay";
	clock-frequency = <400000>;

	pinctrl-names = "on_i2c";
	pinctrl-0 = <&hs_i2c1_bus>;

	fimc-is-2p6@10 {
	     compatible = "samsung,exynos5-fimc-is-cis-2p6";
	     reg = <0x2d>; /* 1 bit right shift */
	     id = <0>; /* matching sensor id */
	     setfile = "default";
	};
};

&hsi2c_2 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpc1 4 0 &gpc1 5 0>;
	status = "okay";
	clock-frequency = <400000>;

	pinctrl-names = "on_i2c";
	pinctrl-0 = <&hs_i2c2_bus>;

	fimc-is-actuator@0C {
	     compatible = "samsung,exynos5-fimc-is-actuator-ak7372";
	     reg = <0x0C>;
	     id = <0>;
	     place = <0>;
	};
};

&hsi2c_3 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpc1 6 0 &gpc1 7 0>;
	status = "okay";
	clock-frequency = <400000>;

	pinctrl-names = "on_i2c";
	pinctrl-0 = <&hs_i2c3_bus>;

	fimc-is-sr846@21 {
	     compatible = "samsung,exynos5-fimc-is-cis-sr846";
	     reg = <0x21>; /* 1 bit right shift */
	     id = <2>; /* matching sensor id */
	     setfile = "default";
	};
};


/*
 * SAMSUNG UNIVERSAL7885 board device tree source
 *
 * Copyright (c) 2013 Samsung Electronics Co., Ltd.
 *		http://www.samsung.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

#include "exynos7885-rmem.dtsi"
#include "exynos7885.dtsi"
#include "display-lcd_jackpot_common.dtsi"
#include "modem-s327ap-sipc-pdata.dtsi"
#include "battery_data_jackpotlte_common.dtsi"
#include "exynos7885-jackpotlte_motor.dtsi"
#include "exynos7885-mali.dtsi"
/ {
	model = "Samsung Universal7885 board based on EXYNOS7885";
	compatible = "samsung,exynos7885", "samsung,Universal7885";

	ect {
		parameter_address = <0x90000000>;
		parameter_size = <0x19000>;
	};

	memory@80000000 {
		device_type = "memory";
		reg = <0x0 0x80000000 0x3DA00000>;
	};

	memory@C0000000 {
		device_type = "memory";
		reg = <0x0 0xC0000000 0x40000000>;
	};

	memory@880000000 {
		device_type = "memory";
		reg = <0x00000008 0x80000000 0x40000000>;
	};

	chosen {
		bootargs = "console=ram root=/dev/ram0 clk_ignore_unused androidboot.hardware=samsungexynos7885 androidboot.selinux=permissive ess_setup=0x86000000 androidboot.debug_level=0x4948";
		linux,initrd-start = <0x84000000>;
		linux,initrd-end = <0x840FFFFF>;
	};

	fixed-rate-clocks {
		oscclk {
			compatible = "samsung,exynos7885-oscclk";
			clock-frequency = <26000000>;
		};
	};

	/* USI MODE SETTINGS

	usi_mode = "hsi2c0" or "hsi2c1" or "spi" or "uart"
	or "hsi2c0_hsi2c1" or "uart_hsi2c1"
	*/
	usi_0: usi@10032000 {
		usi_mode = "spi";
		status = "okay";
	};

	usi_1: usi@10032004 {
		usi_mode = "spi";
		status = "okay";
	};

	usi_2: usi@10032008 {
		usi_mode = "spi";
		status = "okay";
	};

	serial_1: uart@13810000 {
		status = "disabled";
	};

	fm@14840000 {
		num-volume-level = <16>;
		val-vol-level = <0 11 16 23 32 45 64
				 90 128 181 256 362
				 512 724 1024 1400>;
	};

	pinctrl@11CB0000 {
		pmic_irq: pmic-irq {
			samsung,pins = "gpa2-0";
			samsung,pin-pud = <3>;
			samsung,pin-drv = <3>;
		};
	};

	pinctrl@139B0000 {
		/* Warm reset information from AP */
		pm_wrsti: pm-wrsti {
			samsung,pins = "gpg1-1";
			samsung,pin-con-pdn = <3>;
		};
	};

	pinctrl@139B0000 {
		/* SPI_FP */
		spi1_bus_inactive: spi1-bus-inactive {
			samsung,pins = "gpp6-0", "gpp6-1", "gpp6-3";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <2>;
		};
		spi1_miso_inactive: spi1-miso-inactive {
			samsung,pins = "gpp6-2";
			samsung,pin-function = <0>;
			samsung,pin-pud = <1>;
			samsung,pin-drv = <2>;
		};
		spi1_clk: spi1-clk {
			samsung,pins = "gpp6-0";
			samsung,pin-function = <2>;
			samsung,pin-pud = <1>;
			samsung,pin-drv = <2>;
		};
		spi1_cs: spi1-cs {
			samsung,pins = "gpp6-1";
			samsung,pin-function = <2>;
			samsung,pin-pud = <3>;
			samsung,pin-drv = <2>;
		};
		spi1_miso: spi1-miso {
			samsung,pins = "gpp6-2";
			samsung,pin-function = <2>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <2>;
		};
		spi1_mosi: spi1-mosi {
			samsung,pins = "gpp6-3";
			samsung,pin-function = <2>;
			samsung,pin-pud = <1>;
			samsung,pin-drv = <2>;
		};
	};

	but_zones: but_zones {
		#list-but-cells = <3>;
	};

	speedy@11CE0000 {
		status = "okay";
		audio_codec_cod3035x: cod3035x@03 {
			compatible = "codec,cod3035x";
			reg = <0x03>;
			i2c-speedy-address;
			vdd-supply = <&l36_reg>;
			pinctrl-names = "default";
			mic-bias1-voltage = <3>;
			mic-bias2-voltage = <1>;
			mic-bias-ldo-voltage = <3>;
			use-btn-adc-mode;
			use-det-gdet-adc-mode = <1>;
			jack-imp-tuning = <7>;
			io-channels = <&exynos_adc 3>,<&exynos_adc 7>;
			io-channel-names = "adc-ear","adc-gdet";
			#io-channel-cells = <1>;
			io-channel-ranges;
			but-zones-list = <&but_zones 226 0 376>,
							 <&but_zones 582 377 447>,
							 <&but_zones 115 448 627>,
							 <&but_zones 114 628 1161>;
			mic-adc-range = <1404>;
			btn-release-value = <1404>;
		};

		s2mpu08mfd@00 {
			compatible = "samsung,s2mpu08mfd";
			acpm-ipc-channel = <2>;
			i2c-speedy-address;
			s2mpu08,wakeup = "enabled";
			s2mpu08,irq-gpio = <&gpa2 0 0>;
			reg = <0x00>;
			interrupts = <2 0 0>;
			interrupt-parent = <&gpa2>;
			pinctrl-names = "default";
			pinctrl-0 = <&pmic_irq &pm_wrsti>;
			/* RTC: wtsr/smpl */
			wtsr_en = "enabled"; /* enable */
			smpl_en = "enabled"; /* enable */
			wtsr_timer_val = <3>;	/* 1000ms */
			smpl_timer_val = <0>;	/* 100ms */
			check_jigon = <0>; /* do not check jigon */
			/* RTC: If it's first boot, reset rtc to 1/1/2017 12:00:00(Sun) */
			init_time,sec = <0>;
			init_time,min = <0>;
			init_time,hour = <12>;
			init_time,mday = <1>;
			init_time,mon = <0>;
			init_time,year = <117>;
			init_time,wday = <0>;

			samsung,codec-interrupt = <&audio_codec_cod3035x>;

			regulators {
				b1_reg: BUCK1 {
					regulator-name = "vdd_mif";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1100000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <2>;
				};

				b2_reg: BUCK2 {
					regulator-name = "vdd_cpucl0";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				b3_reg: BUCK3 {
					regulator-name = "vdd_cpucl1_2";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				b4_reg: BUCK4 {
					regulator-name = "vdd_int";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1200000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <2>;
				};

				b5_reg: BUCK5 {
					regulator-name = "vdd_g3d";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				b6_reg: BUCK6 {
					regulator-name = "vdd2_mem";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
				};

				b7_reg: BUCK7 {
					regulator-name = "vdd_lldo";
					regulator-min-microvolt = <1200000>;
					regulator-max-microvolt = <1500000>;
					regulator-always-on;
					regulator-boot-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
				};

				b8_reg: BUCK8 {
					regulator-name = "vdd_mldo";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <2100000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
				};

				l1_reg: LDO1 {
					regulator-name = "vdd_ldo1";
					regulator-min-microvolt = <700000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
				};

				l2_reg: LDO2 {
					regulator-name = "vqmmc";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3375000>;
					regulator-ramp-delay = <12000>;
				};

				l3_reg: LDO3 {
					regulator-name = "vdd_ldo3";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1950000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
				};

				l4_reg: LDO4 {
					regulator-name = "vdd_ldo4";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				l5_reg: LDO5 {
					regulator-name = "vdd_ldo5";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1350000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				l6_reg: LDO6 {
					regulator-name = "vdd_ldo6";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1350000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				l7_reg: LDO7 {
					regulator-name = "vdd_ldo7";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1950000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				l8_reg: LDO8 {
					regulator-name = "vdd_ldo8";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				l9_reg: LDO9 {
					regulator-name = "vdd_ldo9";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				l10_reg: LDO10 {
					regulator-name = "vdd_ldo10";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				l11_reg: LDO11 {
					regulator-name = "vdd_ldo11";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				l12_reg: LDO12 {
					regulator-name = "vdd_ldo12";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1350000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				l13_reg: LDO13 {
					regulator-name = "vdd_ldo13";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1950000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				l14_reg: LDO14 {
					regulator-name = "vdd_ldo14";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3375000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				l33_reg: LDO33 {
					regulator-name = "vdd_ldo33";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1950000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
				};

				l34_reg: LDO34 {
					regulator-name = "vdd_ldo34";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3375000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
				};

				l35_reg: LDO35 {
					regulator-name = "vmmc";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3000000>;
					regulator-ramp-delay = <12000>;
				};

				l36_reg: LDO36 {
					regulator-name = "vdd_ldo36";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1950000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
				};

				l37_reg: LDO37 {
					regulator-name = "vdd_ldo37";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3375000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
				};
			};
		};
	};

	sec_thermistor@0 {
		compatible = "samsung,sec-ap-thermistor";
		status = "okay";

		adc_array = <235 308 378 395 467 568 603 648 698 764
				908 1066 1170 1242 1327 1430 1633 1830 2061 2282
				2409 2500 2584 2697 2880 3069 3213 3337 3447>;
		temp_array = <900 850 800 750 700 650 620 600 580 550
				500 450 420 400 380 350 300 250 200 150
				120 100 80 50 0 (-50) (-100) (-150) (-200)>;
		io-channels = <&exynos_adc 0>;
		io-channel-names = "adc-ap-temp";
		io-channel-ranges;
	};

	sec_thermistor@6 {
		compatible = "samsung,sec-wf-thermistor";
		status = "okay";

		adc_array = <235 308 378 395 467 568 603 648 698 764
				908 1066 1170 1242 1327 1430 1633 1830 2061 2282
				2409 2500 2584 2697 2880 3069 3213 3337 3447>;
		temp_array = <900 850 800 750 700 650 620 600 580 550
				500 450 420 400 380 350 300 250 200 150
				120 100 80 50 0 (-50) (-100) (-150) (-200)>;
		io-channels = <&exynos_adc 6>;
		io-channel-names = "adc-wf-temp";
		io-channel-ranges;
	};

	exynos_rgt {
		compatible = "samsung,exynos-rgt";
	};

	serial_2: uart@13820000 {
		status = "okay";
	};

	pinctrl@11CB0000 {
		dwmmc2_cd_ext_irq: dwmmc2_cd_ext_irq {
			samsung,pins = "gpa0-7";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <3>;
		};
	};

	dwmmc0@13500000 {
		status = "okay";
		num-slots = <1>;
		broken-cd;
		fixed_voltage;
		supports-highspeed;
		mmc-ddr-1_8v;
		mmc-hs200-1_8v;
		mmc-hs400-1_8v;
		supports-8bit;
		supports-cmd23;
		supports-erase;
		supports-hs400-enhanced-strobe;
		card-init-hwacg-ctrl;
		support-cmdq;
		qos-dvfs-level = <100000>;
		fifo-depth = <0x40>;
		non-removable;
		desc-size = <4>;
		card-detect-delay = <200>;
		samsung,dw-mshc-ciu-div = <3>;
		samsung,dw-mshc-txdt-crc-timer-fastlimit = <0x13>;
		samsung,dw-mshc-txdt-crc-timer-initval = <0x15>;
		samsung,dw-mshc-hs400-delay-line = <0x60>;
		samsung,dw-mshc-sdr-timing = <3 0 4 0>;
		samsung,dw-mshc-ddr-timing = <3 0 4 2>;
		samsung,dw-mshc-hs200-timing = <3 0 3 0>;
		samsung,dw-mshc-hs400-timing = <1 0 2 0>;
		samsung,dw-mshc-hs400-ulp-timing = <3 0 2 0>;

		num-ref-clks = <12>;
		ciu_clkin = <25 50 50 25 50 100 200 50 50 200 200 200>;

		/* Swapping clock drive strength */
		clk-drive-number = <4>;
		pinctrl-names = "default",
			"fast-slew-rate-1x",
			"fast-slew-rate-2x",
			"fast-slew-rate-3x",
			"fast-slew-rate-4x";
		pinctrl-0 = <&sd0_clk &sd0_cmd &sd0_rdqs &sd0_bus1 &sd0_bus4 &sd0_bus8>;
		pinctrl-1 = <&sd0_clk_fast_slew_rate_1x>;
		pinctrl-2 = <&sd0_clk_fast_slew_rate_2x>;
		pinctrl-3 = <&sd0_clk_fast_slew_rate_3x>;
		pinctrl-4 = <&sd0_clk_fast_slew_rate_4x>;
		slot@0 {
			reg = <0>;
			bus-width = <8>;
		};

	};

	dwmmc1@13510000 {
		status = "disabled";
		num-slots = <1>;
		channel = <1>;
		fixed_voltage;
		enable-cclk-on-suspend;
		caps-control;
		supports-highspeed;
		supports-4bit;
		keep-power-in-suspend;
		pm-ignore-notify;
		card-detect-type-external;
		use-broken-voltage;
		fifo-depth = <0x40>;
		card-detect-delay = <200>;
		qos-dvfs-level = <100000>;
		data-timeout = <200>;
		hto-timeout = <80>;
		samsung,dw-mshc-ciu-div = <3>;
		samsung,dw-mshc-sdr-timing = <3 0 2 0>;
		samsung,dw-mshc-ddr-timing = <3 0 2 1>;
		samsung,dw-mshc-sdr50-timing = <3 0 4 2>;
		samsung,dw-mshc-sdr104-timing = <3 0 3 0>;

		num-ref-clks = <9>;
		ciu_clkin = <25 50 50 25 50 100 200 50 50>;

		clk-drive-number = <4>;
		pinctrl-names = "default",
			"fast-slew-rate-1x",
			"fast-slew-rate-2x",
			"fast-slew-rate-3x",
			"fast-slew-rate-4x";
		pinctrl-0 = <&sd1_clk &sd1_cmd &sd1_bus1 &sd1_bus4>;
		pinctrl-1 = <&sd1_clk_fast_slew_rate_1x>;
		pinctrl-2 = <&sd1_clk_fast_slew_rate_2x>;
		pinctrl-3 = <&sd1_clk_fast_slew_rate_3x>;
		pinctrl-4 = <&sd1_clk_fast_slew_rate_4x>;
		slot@0 {
			reg = <0>;
			bus-width = <4>;
		};
	};

	tsp_ldo_en {
		compatible = "regulator-fixed";
		regulator-name = "tsp_ldo_en";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		gpio = <&gpg3 0 0>;
		enable-active-high;
		regulator-boot-on;
	};

	i2c_4:i2c@13870000 {
		status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;
		samsung,i2c-sda-delay = <100>;
		samsung,i2c-max-bus-freq = <400000>;
		samsung,stop-after-trans;	/* LSI IC ONLY */
		touchscreen@48 {
			compatible = "sec,sec_ts";
			reg = <0x48>;
			pinctrl-names = "on_state", "off_state";
			pinctrl-0 = <&attn_irq>;
			pinctrl-1 = <&attn_input>;
			sec,tsp-id_gpio = <&gpg3 6 0>;
			sec,irq_gpio = <&gpa0 0 0>;
			sec,irq_type = <8200>;
			sec,num_lines = <30 15>;        /* rx tx */
			sec,max_coords = <4096 4096>;   /* x y */
			sec,use_ic_resolution;
			sec,mis_cal_check = <1>;
			sec,use_gpio_ldo;
			sec,regulator_avdd = "tsp_ldo_en";
			sec,regulator_boot_on;
			sec,grip_area = <512>;
			sec,bringup = <3>;
			sec,project_name = "JACKPOT1", "A530";
			sec,firmware_name = "tsp_sec/y661_a5y18.fw", "tsp_sec/y661_a5y18.fw";
			sec,tclm_level = <2>;
			sec,afe_base = <0x05>;
			status = "okay";
		};
	};

	pinctrl@11CB0000 {
		attn_irq: attn-irq {
			samsung,pins = "gpa0-0";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
		attn_input: attn-input {
			samsung,pins = "gpa0-0";
			samsung,pin-function = <0>;
			samsung,pin-pud = <1>;
		};
		cfg_irq: cfg-irq {
			samsung,pins = "gpa2-7";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
		cfg_input: cfg-input {
			samsung,pins = "gpa2-7";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	pinctrl@139B0000 {
		fimc_is_flash_host: fimc-is-flash-host {
			samsung,pins = "gpg1-2";
			samsung,pin-function = <1>; /* 0: input, 1:output*/
			samsung,pin-pud = <0>; /* 0: NP, 1: PD, 2: reserved 3:PU */
			samsung,pin-drv = <0>;
		};
		fimc_is_flash_is: fimc-is-flash-is {
			samsung,pins = "gpg1-2";
			samsung,pin-function = <0>; /* 0: input, 1:output*/
			samsung,pin-pud = <1>; /* 0: NP, 1: PD, 2: reserved 3:PU */
			samsung,pin-drv = <0>;
		};
	};

	pinctrl@139B0000 {
		grip_ldo_en: grip-ldo-en {
			samsung,pins = "gpg2-5";
			samsung,pin-function = <1>;
			samsung,pin-val = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-con-pdn =<3>;
			samsung,pin-pud-pdn = <0>;
		};
	};

	pinctrl@139B0000 {
		/* touchkey i2c*/
		cfg_i2c: cfg-i2c {
			samsung,pins = "gpp4-2", "gpp4-3";
			samsung,pin-function = <2>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
		cfg_gpio: cfg_gpio {
			samsung,pins = "gpp4-2", "gpp4-3";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	i2c_5:i2c@13880000 {
		status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;
		samsung,i2c-sda-delay = <100>;
		samsung,i2c-max-bus-freq = <400000>;
		pinctrl-names = "default","on_i2c","off_i2c";
		pinctrl-0 = <&cfg_i2c>;
		pinctrl-1 = <&cfg_i2c>;
		pinctrl-2 = <&cfg_gpio>;
		abov@20 {
			status = "okay";
			compatible = "abov,a96t3x6";
			pinctrl-names = "on_irq", "off_irq";
			pinctrl-0 = <&cfg_irq &grip_ldo_en>;
			pinctrl-1 = <&cfg_input>;
			reg = <0x20>;
			abov,sda-gpio = <&gpp4 2 0>;
			abov,scl-gpio = <&gpp4 3 0>;
			abov,irq-gpio = <&gpa2 7 0>;
			abov,tkey_en-gpio = <&gpg2 5 0>;
			abov,firmware_name = "abov/a96t326_a5y18.fw";
			abov,firmup_cmd = <0x32>;
			abov,ta-notifier;
			abov,not_support_key;
			abov,bringup = <0>;
		};
	};

	dwmmc2@13550000 {
		status = "okay";
		num-slots = <1>;
		supports-4bit;
		supports-cmd23;
		supports-erase;
		supports-highspeed;
		sd-uhs-sdr50;
		sd-uhs-sdr104;
		card-detect-gpio;
		card-no-pre-powerup;
		bypass-for-allpass;
		card-init-hwacg-ctrl;
		skip-init-mmc-scan;
		qos-dvfs-level = <100000>;
		qos-sd3-dvfs-level = <267000>;
		fifo-depth = <0x40>;
		desc-size = <4>;
		card-detect-delay = <200>;
		data-timeout = <200>;
		hto-timeout = <80>;
		samsung,dw-mshc-ciu-div = <3>;
		clock-frequency = <800000000>;
		samsung,dw-mshc-sdr-timing = <3 0 2 0>;
		samsung,dw-mshc-ddr-timing = <3 0 2 1>;
		samsung,dw-mshc-sdr50-timing = <3 0 4 2>;
		samsung,dw-mshc-sdr104-timing = <3 0 3 0>;

		num-ref-clks = <9>;
		ciu_clkin = <25 50 50 25 50 100 200 50 50>;

		/* Swapping clock drive strength */
		clk-drive-number = <4>;
		pinctrl-names = "default",
			"fast-slew-rate-1x",
			"fast-slew-rate-2x",
			"fast-slew-rate-3x",
			"fast-slew-rate-4x";
		pinctrl-0 = <&sd2_clk &sd2_cmd &sd2_bus1 &sd2_bus4 &dwmmc2_cd_ext_irq>;
		pinctrl-1 = <&sd2_clk_fast_slew_rate_1x>;
		pinctrl-2 = <&sd2_clk_fast_slew_rate_2x>;
		pinctrl-3 = <&sd2_clk_fast_slew_rate_3x>;
		pinctrl-4 = <&sd2_clk_fast_slew_rate_4x>;

		card-detect = <&gpa0 7 0xf>;
		sec-sd-slot-type = <2>; /* Hybrid Tray SD slot */

		slot@0 {
			reg = <0>;
			bus-width = <4>;
			disable-wp;
		};

	};

	pinctrl@11CB0000 {
		key_power: key-power {
			samsung,pins = "gpa1-7";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		key_voldown: key-voldown {
			samsung,pins = "gpa1-6";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		key_volup: key-volup {
			samsung,pins = "gpa1-5";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		hall_irq: hall-irq {
			samsung,pins = "gpa0-3";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		certify_hall_irq: certify-hall-irq {
			samsung,pins = "gpa0-4";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	flip_cover {
		status = "okay";
		compatible = "flip_cover";
		pinctrl-names = "default";
		pinctrl-0 = <&hall_irq &certify_hall_irq>;
		hall {
			name = "hall";
			event = <0x15>;
			gpios = <&gpa0 3 0>;
		};
		certify_hall {
			name = "certify_hall";
			event = <0x1b>;
			gpios = <&gpa0 4 0xf>;
		};
	};

	gpio_keys {
		status = "okay";
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&key_voldown &key_volup &key_power>;
		button@1 {
			label = "gpio-keys: KEY_VOLUMEDOWN";
			interrupts = <6 0 0>;
			interrupt-parent = <&gpa1>;
			linux,code = <114>;
			gpios = <&gpa1 6 0xf>;
		};
		button@2 {
			label = "gpio-keys: KEY_VOLUMEUP";
			interrupts = <5 0 0>;
			interrupt-parent = <&gpa1>;
			linux,code = <115>;
			gpios = <&gpa1 5 0xf>;
		};
		button@3 {
			label = "gpio-keys: KEY_POWER";
			interrupts = <7 0 0>;
			interrupt-parent = <&gpa1>;
			linux,code = <116>;
			gpios = <&gpa1 7 0xf>;
			gpio-key,wakeup = <1>;
		};

	};

	sec_abc {
		compatible = "samsung,sec_abc";
		status = "okay";

		gpu {
			gpu,label="GPU fault";
			gpu,threshold_count=<20>;
			gpu,threshold_time=<1200>;
		};
		aicl {
			aicl,label="battery aicl";
			aicl,threshold_count=<5>;
			aicl,threshold_time=<300>;
		};
	};

	usb@13600000 {
		status = "okay";
		dwc3 {
			dr_mode = "otg";
			maximum-speed = "high-speed";
			snps,quirk-frame-length-adjustment = <0x20>;
		};
	};

	phy@135D0000 {
		status = "okay";
		hs_tune_param = <&usb_hs_tune>;
	};

	usb_hs_tune:hs_tune {
		hs_tune_cnt = <12>;

		/* value = <device host> */
		hs_tune1 {
			tune_name = "tx_vref";
			tune_value = <0xd 0x1>;
		};

		hs_tune2 {
			tune_name = "tx_pre_emp";
			tune_value = <0x3 0x3>;
		};

		hs_tune3 {
			tune_name = "tx_pre_emp_plus";
			tune_value = <0x0 0x0>;
		};

		hs_tune4 {
			tune_name = "tx_res";
			tune_value = <0x3 0x3>;
		};

		hs_tune5 {
			tune_name = "tx_rise";
			tune_value = <0x3 0x3>;
		};

		hs_tune6 {
			tune_name = "tx_hsxv";
			tune_value = <0x3 0x3>;
		};

		hs_tune7 {
			tune_name = "tx_fsls";
			tune_value = <0x3 0x3>;
		};

		hs_tune8 {
			tune_name = "rx_sqrx";
			tune_value = <0x7 0x7>;
		};

		hs_tune9 {
			tune_name = "compdis";
			tune_value = <0x7 0x7>;
		};

		hs_tune10 {
			tune_name = "otg";
			tune_value = <0x2 0x2>;
		};

		hs_tune11 {
		/* true : 1, false: 0 */
		/* <enable_user_imp user_imp_value> */
			tune_name = "enable_user_imp";
			tune_value = <0x0 0x0>;
		};

		hs_tune12 {
		/* PHY clk : 1 , FREE clk : 0 */
			tune_name = "is_phyclock";
			tune_value = <0x1 0x1>;
		};
	};

	mailbox_cp: mcu_ipc@12080000 {
		compatible = "samsung,exynos-shd-ipc-mailbox";
		reg = <0x0 0x12080000 0x180>;
		mcu,name = "mcu_ipc_cp";
		mcu,id = <0>;
		interrupts = <0 55 0 >; /* MAILBOX_CP_TO_AP SPI Number */
	};

	mailbox_gnss: mcu_ipc@120D0000 {
		compatible = "samsung,exynos-shd-ipc-mailbox";
		reg = <0x0 0x120D0000 180>;
		mcu,name = "mcu_ipc_gnss";
		mcu,id = <1>;
		interrupts = <GIC_SPI 56 IRQ_TYPE_NONE>;
	};

	gnss_pdata {
		status = "okay";

		compatible = "samsung,gnss_shdmem_if";
		shmem,name = "KEPLER";
		shmem,device_node_name = "gnss_ipc";

		/* ACTIVE WATCHDOG WAKEUP */
		interrupts = <GIC_SPI 20 IRQ_TYPE_NONE>,
			     <GIC_SPI 165 IRQ_TYPE_NONE>,
			     <GIC_SPI 164 IRQ_TYPE_NONE>;
		interrupt-names = "ACTIVE", "WATCHDOG", "WAKEUP";

		memory-region = <&gnss_reserved>;
		mbox_info = <&mailbox_gnss>;

		mbx,int_ap2gnss_bcmd = <0>;
		mbx,int_ap2gnss_req_fault_info = <1>;
		mbx,int_ap2gnss_ipc_msg = <2>;
		mbx,int_ap2gnss_ack_wake_set = <3>;
		mbx,int_ap2gnss_ack_wake_clr = <4>;

		mbx,irq_gnss2ap_bcmd = <0>;
		mbx,irq_gnss2ap_rsp_fault_info = <1>;
		mbx,irq_gnss2ap_ipc_msg = <2>;
		mbx,irq_gnss2ap_req_wake_clr = <4>;

		mbx,reg_bcmd_ctrl = <0>, <1>, <2>, <3>;

		reg_rx_ipc_msg = <1 5>;
		reg_tx_ipc_msg = <1 4>;
		reg_rx_head = <1 3>;
		reg_rx_tail = <1 2>;
		reg_tx_head = <1 1>;
		reg_tx_tail = <1 0>;
		fault_info = <1 0x200000 0x180000>;

		shmem,ipc_offset = <0x380000>;
		shmem,ipc_size = <0x80000>;
		shmem,ipc_reg_cnt = <32>;

		/* Use the following value when can't boot with mailbox */
		shmem,boot_without_mbox = <1>; /* Default : 0 */
	};

	usb_notifier {
		compatible = "samsung,usb-notifier";
		udc = <&udc>;
	};

	i2c@13840000{
		status = "okay";
		s2mu004@3D {
			status = "okay";
			compatible = "samsung,s2mu004mfd";
			reg = <0x3D>;
			pinctrl-names = "default";
			pinctrl-0 = <&if_pmic_irq>;
			s2mu004,irq-gpio = <&gpa2 2 1>;
			s2mu004,wakeup;
		};
	};

	fimc_is@14440000 {
		pinctrl-names = "default","release";
		pinctrl-0 = <&fimc_is_mclk0_out &fimc_is_mclk1_out &fimc_is_mclk2_out>;
		pinctrl-1 = <>;

		vender {
			rear_sensor_id = <58>; /* SENSOR_NAME_S5K2P6 */
			front_sensor_id = <44>; /* SENSOR_NAME_S5K3P8SP */
			front2_sensor_id = <208>; /* SENSOR_NAME_SR846 */
			use_module_check;
			check_sensor_vendor;
			/*skip_cal_loading;*/

			max_camera_num = <6>;
			camera_info0 {				// 0 : rear - 2p6
				isp = <0>;			/* 0 : INT , 1 : EXT , 2 : SOC */
				cal_memory = <2>;		/* 0 : N , 1 : FROM , 2 : EEPROM , 3 : OTP  */
				read_version = <0>;		/* 0 : SYSFS , 1 : CAMON */
				core_voltage = <0>;		/* 0 : N , 1 : Y  */
				upgrade = <0>;			/* 0 : N , 1 : SYSFS , 2 : CAMON */
				companion = <0>;		/* 0 : N , 1 : Y  */
				ois = <0>;			/* 0 : N , 1 : Y  */
				valid = <1>;			/* 0 : INVALID, 1 : VALID */
				dual_open = <0>;		/* 0 : SINGLE_OPEN , 1 : DUAL_OPEN */
			};
			camera_info1 {				// 1 : front1 - 3p8sp
				isp = <0>;			/* 0 : INT , 1 : EXT , 2 : SOC */
				cal_memory = <2>;		/* 0 : N , 1 : FROM , 2 : EEPROM , 3 : OTP  */
				read_version = <0>;		/* 0 : SYSFS , 1 : CAMON */
				core_voltage = <0>;		/* 0 : N , 1 : Y  */
				upgrade = <0>;			/* 0 : N , 1 : SYSFS , 2 : CAMON */
				companion = <0>;		/* 0 : N , 1 : Y  */
				ois = <0>;			/* 0 : N , 1 : Y  */
				valid = <1>;			/* 0 : INVALID, 1 : VALID */
				dual_open = <0>;		/* 0 : SINGLE_OPEN , 1 : DUAL_OPEN */
			};
			camera_info5 {				// 1 : front2 - sr846
				isp = <0>;			/* 0 : INT , 1 : EXT , 2 : SOC */
				cal_memory = <2>;		/* 0 : N , 1 : FROM , 2 : EEPROM , 3 : OTP  */
				read_version = <0>;		/* 0 : SYSFS , 1 : CAMON */
				core_voltage = <0>;		/* 0 : N , 1 : Y  */
				upgrade = <0>;			/* 0 : N , 1 : SYSFS , 2 : CAMON */
				companion = <0>;		/* 0 : N , 1 : Y  */
				ois = <0>;			/* 0 : N , 1 : Y  */
				valid = <1>;			/* 0 : INVALID, 1 : VALID */
				dual_open = <1>;		/* 0 : SINGLE_OPEN , 1 : DUAL_OPEN */
			};
		};

		fimc_is_dvfs {
			/* TODO: DVFS level set */
			#define DVFS_INT_L0 533000
			#define DVFS_INT_L1 333000
			#define DVFS_INT_L2 267000
			#define DVFS_INT_L3 133000
			#define DVFS_INT_L4 107000

			#define DVFS_CAM_L0 690000
			#define DVFS_CAM_L1 680000
			#define DVFS_CAM_L2 670000
			#define DVFS_CAM_L3 660000
			#define DVFS_CAM_L4 650000

			#define DVFS_MIF_L0 2093000
			#define DVFS_MIF_L1 2002000
			#define DVFS_MIF_L2 1794000
			#define DVFS_MIF_L3 1539000
			#define DVFS_MIF_L4 1352000
			#define DVFS_MIF_L5 1014000
			#define DVFS_MIF_L6 845000
			#define DVFS_MIF_L7 676000
			#define DVFS_MIF_L8 546000
			#define DVFS_MIF_L9 420000

			table0 {
				desc = "default";

				default_int = <DVFS_INT_L0>;
				default_cam = <DVFS_CAM_L0>;
				default_mif = <DVFS_MIF_L0>;
				default_i2c = <0>;

				front2_preview_int = <DVFS_INT_L4>;
				front2_preview_cam = <DVFS_CAM_L2>;
				front2_preview_mif = <DVFS_MIF_L5>;
				front2_preview_i2c = <0>;

				front2_capture_int = <DVFS_INT_L4>;
				front2_capture_cam = <DVFS_CAM_L2>;
				front2_capture_mif = <DVFS_MIF_L4>;
				front2_capture_i2c = <0>;

				front2_video_int = <DVFS_INT_L4>;
				front2_video_cam = <DVFS_CAM_L2>;
				front2_video_mif = <DVFS_MIF_L5>;
				front2_video_i2c = <0>;

				front2_video_capture_int = <DVFS_INT_L4>;
				front2_video_capture_cam = <DVFS_CAM_L2>;
				front2_video_capture_mif = <DVFS_MIF_L4>;
				front2_video_capture_i2c = <0>;

				front_preview_int = <DVFS_INT_L4>;
				front_preview_cam = <DVFS_CAM_L2>;
				front_preview_mif = <DVFS_MIF_L5>;
				front_preview_i2c = <0>;

				front_capture_int = <DVFS_INT_L4>;
				front_capture_cam = <DVFS_CAM_L2>;
				front_capture_mif = <DVFS_MIF_L5>;
				front_capture_i2c = <0>;

				front_video_int = <DVFS_INT_L4>;
				front_video_cam = <DVFS_CAM_L2>;
				front_video_mif = <DVFS_MIF_L5>;
				front_video_i2c = <0>;

				front_vt1_int = <DVFS_INT_L4>;
				front_vt1_cam = <DVFS_CAM_L2>;
				front_vt1_mif = <DVFS_MIF_L7>;
				front_vt1_i2c = <0>;

				front_vt2_int = <DVFS_INT_L4>;
				front_vt2_cam = <DVFS_CAM_L2>;
				front_vt2_mif = <DVFS_MIF_L7>;
				front_vt2_i2c = <0>;

				front_vt4_int = <DVFS_INT_L4>;
				front_vt4_cam = <DVFS_CAM_L2>;
				front_vt4_mif = <DVFS_MIF_L7>;
				front_vt4_i2c = <0>;

				rear_preview_fhd_int = <DVFS_INT_L4>;
				rear_preview_fhd_cam = <DVFS_CAM_L2>;
				rear_preview_fhd_mif = <DVFS_MIF_L4>;
				rear_preview_fhd_i2c = <0>;

				rear_capture_int = <DVFS_INT_L4>;
				rear_capture_cam = <DVFS_CAM_L1>;
				rear_capture_mif = <DVFS_MIF_L3>;
				rear_capture_i2c = <0>;

				rear_video_fhd_int = <DVFS_INT_L4>;
				rear_video_fhd_cam = <DVFS_CAM_L2>;
				rear_video_fhd_mif = <DVFS_MIF_L4>;
				rear_video_fhd_i2c = <0>;

				rear_video_uhd_int = <DVFS_INT_L4>;
				rear_video_uhd_cam = <DVFS_CAM_L2>;
				rear_video_uhd_mif = <DVFS_MIF_L1>;
				rear_video_uhd_i2c = <0>;

				rear_video_fhd_capture_int = <DVFS_INT_L4>;
				rear_video_fhd_capture_cam = <DVFS_CAM_L1>;
				rear_video_fhd_capture_mif = <DVFS_MIF_L3>;
				rear_video_fhd_capture_i2c = <0>;

				rear_video_uhd_capture_int = <DVFS_INT_L4>;
				rear_video_uhd_capture_cam = <DVFS_CAM_L0>;
				rear_video_uhd_capture_mif = <DVFS_MIF_L0>;
				rear_video_uhd_capture_i2c = <0>;

				dual_preview_int = <DVFS_INT_L4>;
				dual_preview_cam = <DVFS_CAM_L0>;
				dual_preview_mif = <DVFS_MIF_L2>;
				dual_preview_i2c = <0>;

				dual_capture_int = <DVFS_INT_L4>;
				dual_capture_cam = <DVFS_CAM_L0>;
				dual_capture_mif = <DVFS_MIF_L2>;
				dual_capture_i2c = <0>;

				dual_video_int = <DVFS_INT_L4>;
				dual_video_cam = <DVFS_CAM_L0>;
				dual_video_mif = <DVFS_MIF_L2>;
				dual_video_i2c = <0>;

				preview_high_speed_fps_int = <DVFS_INT_L4>;
				preview_high_speed_fps_cam = <DVFS_CAM_L2>;
				preview_high_speed_fps_mif = <DVFS_MIF_L5>;
				preview_high_speed_fps_i2c = <0>;

				video_high_speed_60fps_int = <DVFS_INT_L4>;
				video_high_speed_60fps_cam = <DVFS_CAM_L2>;
				video_high_speed_60fps_mif = <DVFS_MIF_L5>;
				video_high_speed_60fps_i2c = <0>;

				video_high_speed_120fps_int = <DVFS_INT_L4>;
				video_high_speed_120fps_cam = <DVFS_CAM_L2>;
				video_high_speed_120fps_mif = <DVFS_MIF_L5>;
				video_high_speed_120fps_i2c = <0>;

				max_int = <DVFS_INT_L0>;
				max_cam = <DVFS_CAM_L0>;
				max_mif = <DVFS_MIF_L0>;
				max_i2c = <0>;
			};

			table1 {
				desc = "DVFS table for HAL3";

				default_int = <DVFS_INT_L0>;
				default_cam = <DVFS_CAM_L0>;
				default_mif = <DVFS_MIF_L0>;
				default_i2c = <0>;

				front2_preview_int = <DVFS_INT_L4>;
				front2_preview_cam = <DVFS_CAM_L2>;
				front2_preview_mif = <DVFS_MIF_L5>;
				front2_preview_i2c = <0>;

				front2_capture_int = <DVFS_INT_L4>;
				front2_capture_cam = <DVFS_CAM_L2>;
				front2_capture_mif = <DVFS_MIF_L4>;
				front2_capture_i2c = <0>;

				front2_video_int = <DVFS_INT_L4>;
				front2_video_cam = <DVFS_CAM_L2>;
				front2_video_mif = <DVFS_MIF_L5>;
				front2_video_i2c = <0>;

				front2_video_capture_int = <DVFS_INT_L4>;
				front2_video_capture_cam = <DVFS_CAM_L2>;
				front2_video_capture_mif = <DVFS_MIF_L4>;
				front2_video_capture_i2c = <0>;

				front_preview_int = <DVFS_INT_L4>;
				front_preview_cam = <DVFS_CAM_L2>;
				front_preview_mif = <DVFS_MIF_L5>;
				front_preview_i2c = <0>;

				front_capture_int = <DVFS_INT_L4>;
				front_capture_cam = <DVFS_CAM_L2>;
				front_capture_mif = <DVFS_MIF_L5>;
				front_capture_i2c = <0>;

				front_video_int = <DVFS_INT_L4>;
				front_video_cam = <DVFS_CAM_L2>;
				front_video_mif = <DVFS_MIF_L5>;
				front_video_i2c = <0>;

				front_vt1_int = <DVFS_INT_L4>;
				front_vt1_cam = <DVFS_CAM_L2>;
				front_vt1_mif = <DVFS_MIF_L5>;
				front_vt1_i2c = <0>;

				front_vt2_int = <DVFS_INT_L4>;
				front_vt2_cam = <DVFS_CAM_L2>;
				front_vt2_mif = <DVFS_MIF_L5>;
				front_vt2_i2c = <0>;

				front_vt4_int = <DVFS_INT_L4>;
				front_vt4_cam = <DVFS_CAM_L2>;
				front_vt4_mif = <DVFS_MIF_L5>;
				front_vt4_i2c = <0>;

				rear_preview_fhd_int = <DVFS_INT_L4>;
				rear_preview_fhd_cam = <DVFS_CAM_L0>;
				rear_preview_fhd_mif = <DVFS_MIF_L2>;
				rear_preview_fhd_i2c = <0>;

				rear_capture_int = <DVFS_INT_L4>;
				rear_capture_cam = <DVFS_CAM_L0>;
				rear_capture_mif = <DVFS_MIF_L2>;
				rear_capture_i2c = <0>;

				rear_video_fhd_int = <DVFS_INT_L4>;
				rear_video_fhd_cam = <DVFS_CAM_L0>;
				rear_video_fhd_mif = <DVFS_MIF_L2>;
				rear_video_fhd_i2c = <0>;

				rear_video_uhd_int = <DVFS_INT_L4>;
				rear_video_uhd_cam = <DVFS_CAM_L0>;
				rear_video_uhd_mif = <DVFS_MIF_L1>;
				rear_video_uhd_i2c = <0>;

				rear_video_fhd_capture_int = <DVFS_INT_L4>;
				rear_video_fhd_capture_cam = <DVFS_CAM_L0>;
				rear_video_fhd_capture_mif = <DVFS_MIF_L2>;
				rear_video_fhd_capture_i2c = <0>;

				rear_video_uhd_capture_int = <DVFS_INT_L4>;
				rear_video_uhd_capture_cam = <DVFS_CAM_L0>;
				rear_video_uhd_capture_mif = <DVFS_MIF_L0>;
				rear_video_uhd_capture_i2c = <0>;

				dual_preview_int = <DVFS_INT_L4>;
				dual_preview_cam = <DVFS_CAM_L0>;
				dual_preview_mif = <DVFS_MIF_L2>;
				dual_preview_i2c = <0>;

				dual_capture_int = <DVFS_INT_L4>;
				dual_capture_cam = <DVFS_CAM_L0>;
				dual_capture_mif = <DVFS_MIF_L2>;
				dual_capture_i2c = <0>;

				dual_video_int = <DVFS_INT_L4>;
				dual_video_cam = <DVFS_CAM_L0>;
				dual_video_mif = <DVFS_MIF_L2>;
				dual_video_i2c = <0>;

				preview_high_speed_fps_int = <DVFS_INT_L4>;
				preview_high_speed_fps_cam = <DVFS_CAM_L2>;
				preview_high_speed_fps_mif = <DVFS_MIF_L5>;
				preview_high_speed_fps_i2c = <0>;

				video_high_speed_60fps_int = <DVFS_INT_L4>;
				video_high_speed_60fps_cam = <DVFS_CAM_L3>;
				video_high_speed_60fps_mif = <DVFS_MIF_L5>;
				video_high_speed_60fps_i2c = <0>;

				video_high_speed_120fps_int = <DVFS_INT_L4>;
				video_high_speed_120fps_cam = <DVFS_CAM_L2>;
				video_high_speed_120fps_mif = <DVFS_MIF_L5>;
				video_high_speed_120fps_i2c = <0>;

				max_int = <DVFS_INT_L0>;
				max_cam = <DVFS_CAM_L0>;
				max_mif = <DVFS_MIF_L0>;
				max_i2c = <0>;
			};
		};
	};

	fimc_is_sensor_2p6: fimc-is_sensor_2p6@5A {
		compatible = "samsung,sensor-module-2p6";

		pinctrl-names = "pin0", "pin1", "pin2", "release";
		pinctrl-0 = <>;
		pinctrl-1 = <&fimc_is_mclk0_out>;
		pinctrl-2 = <&fimc_is_mclk0_fn>;
		pinctrl-3 = <>;

		use_pdaf; /* when USE_AP_PDAF is enabled, use for pdaf sensor */

		position = <0>;	/* Rear:0. Front:1 */
		id = <0>; /* bns_id */
		mclk_ch = <0>;

		gpio_mclk = <&gpc0 0 0x1>;
		gpio_reset = <&gpf3 2 0x1>; /* sensor reset - jackpot hw_rev = 100'b */
		gpio_core_en = <&gpp0 2 0x1>; /* RCAM_LDO_EN */
		gpio_cam_io_en = <&gpg2 0 0x1>; /* RCAM_IO_LDO_EN */
		gpio_cam_af_en = <&gpp0 3 0x1>; /* RCAM_AF_2P8_EN */
		status = "okay";

		af {
			product_name = <16>; /* AK7372 */
			i2c_addr = <0x18>;
			i2c_ch = <3>;
		};

		flash {
			product_name = <5>; /* FLASH_KTD2692 */
			flash_first_gpio = <2>; /* DICO not use first, second gpio value */
			flash_second_gpio = <3>;
		};

		internal_vc {
			/* vc_list = <channel, data_type, buffer_offset>
			 * channel : Output VC channel
			 *  - Supported channels are 1(VC1), 2(VC2), 3(VC3)
			 *  - Since channel 0(VC0) is dedicated to image data, it can not be used

			 * data_type : Output type of VC channel
			 *  - Value 0 VC_NOTHING
			 *  - Value 1 VC_TAIL_MODE_PDAF
			 *  - Value 2 VC_MIPI_STAT
			 * buffer_offset : get_vc_dma_buf offset value of buffer to return when using interface

			 *  - Value 0 N buffer return
			 *  - Value 1 N-1 buffer return
			 */

			vc_list = <1 1 1>;
		};
	};

	fimc_is_sensor_3p8sp: fimc-is_sensor_3p8sp@5A {
		compatible = "samsung,sensor-module-3p8sp";

		pinctrl-names = "pin0", "pin1", "pin2", "release";
		pinctrl-0 = <>;
		pinctrl-1 = <&fimc_is_mclk1_out>;
		pinctrl-2 = <&fimc_is_mclk1_fn>;
		pinctrl-3 = <>;

		position = <1>;	/* Rear:0. Front:1 */
		id = <1>; /* bns_id */
		mclk_ch = <1>;

		gpio_mclk = <&gpc0 1 0x1>;
		gpio_reset = <&gpf3 0 0x1>;	/* sensor reset */
		gpio_rcam_en = <&gpg2 0 0x1>;	/* RCAM_IO_LDO_EN */
		gpio_fcam1_en = <&gpp0 0 0x1>;	/* FCAM1 all LDOs */
		gpio_fcam2_en = <&gpp0 1 0x1>;	/* FCAM2 all LDOs */
		status = "okay";
	};

	fimc_is_sensor_sr846: fimc-is_sensor_sr846@42 {
		compatible = "samsung,sensor-module-sr846";

		pinctrl-names = "pin0", "pin1", "pin2", "release";
		pinctrl-0 = <>;
		pinctrl-1 = <&fimc_is_mclk2_out>;
		pinctrl-2 = <&fimc_is_mclk2_fn>;
		pinctrl-3 = <>;

		position = <5>;	/* Rear:0. Front:1. Front_1:5 */
		id = <2>; /* bns_id */
		mclk_ch = <2>;

		gpio_mclk = <&gpc0 2 0x1>;
		gpio_reset = <&gpf3 1 0x1>;	/* sensor reset */
		gpio_ldos_en = <&gpp0 1 0x1>;	/* all LDOs */
		status = "okay";
	};

	fimc_is_flash_ktd2692: fimc-is-flash_ktd2692@0 {
		compatible = "samsung,sensor-flash-ktd2692";
		id = <0>; /* matching sensor id */
		status = "okay";
	};

	leds_ktd2692 {
		compatible = "ktd2692";
		flash_control = <&gpg1 2 0x1>;
		max_current = <1500>; /* (IMax) */
		flash_current = <1200>; /* (n/16)xIMax (1<=n<=16) */
		movie_current = <175>; /* (n/16)*IMax/3 (1<=n<=16) */
		factory_current = <175>; /* (n/16)xIMax/3 (1<=n<=16) */
		torch_current = <75>; /* (n/16)xIMax/3 (1<=n<=16) */
		torch_table_enable = <1>;
		torch_table = <1 2 2 3 3 4 4 4 5 5>;
		status = "okay";
		pinctrl-names ="default","host","is";
		pinctrl-0 = <&fimc_is_flash_is>;
		pinctrl-1 = <&fimc_is_flash_host>;
		pinctrl-2 = <&fimc_is_flash_is>;
	};

	#define SENSOR_SCENARIO_NORMAL		0
	#define SENSOR_SCENARIO_VISION		1
	#define SENSOR_SCENARIO_EXTERNAL	2
	#define SENSOR_SCENARIO_OIS_FACTORY	3
	#define SENSOR_SCENARIO_VIRTUAL		9
	#define FLITE_ID_NOTHING 100

	fimc_is_sensor0: fimc_is_sensor@14410000 {
		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
		id = <0>;
		csi_ch = <1>;
		flite_ch = <FLITE_ID_NOTHING>;
		is_bns = <0>;
		is_flite = <0>;
		status = "okay";

		use_ssvc1_internal;
	};

	fimc_is_sensor1: fimc_is_sensor@14400000 {
		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
		id = <1>;
		csi_ch = <0>;
		flite_ch = <FLITE_ID_NOTHING>;
		is_bns = <0>;
		is_flite = <0>;
		status = "okay";
	};

	fimc_is_sensor2: fimc_is_sensor@14420000 {
		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
		id = <2>;
		csi_ch = <2>;
		flite_ch = <FLITE_ID_NOTHING>;
		is_bns = <0>;
		is_flite = <0>;
		status = "okay";
	};

	hsi2c_1: hsi2c@138B0000 {
		gpios = <&gpc1 2 0 &gpc1 3 0>;
		status = "okay";
		clock-frequency = <400000>;

		pinctrl-names = "on_i2c";
		pinctrl-0 = <&hs_i2c1_bus>;

		fimc-is-2p6@10 {
			compatible = "samsung,exynos5-fimc-is-cis-2p6";
			reg = <0x2d>; /* 1 bit right shift */
			id = <0>; /* matching sensor id */
			sensor_f_number = <170>; /* f number 1.7 */
			setfile = "setB";

			use_pdaf; /* when USE_AP_PDAF is enabled, use for pdaf sensor */
		};
	};

	hsi2c_2: hsi2c@138C0000 {
		gpios = <&gpc1 4 0 &gpc1 5 0>;
		status = "okay";
		clock-frequency = <400000>;

		pinctrl-names = "on_i2c";
		pinctrl-0 = <&hs_i2c2_bus>;

		fimc-is-actuator@18 {
		     compatible = "samsung,exynos5-fimc-is-actuator-ak7372";
		     reg = <0x0C>; /* 7bit-addr */
		     id = <0>;
		     place = <0>;
		};

		fimc_is_eeprom_i2c@A0 {
			compatible = "samsung,rear-eeprom-i2c";
			reg = <0x50>; /* 7bit-addr */
		};

		fimc_is_eeprom_i2c@A2 {
			compatible = "samsung,front-eeprom-i2c";
			reg = <0x51>; /* 7bit-addr */
		};
	};

	hsi2c_0: hsi2c@138A0000 {
		gpios = <&gpc1 0 0 &gpc1 1 0>;
		status = "okay";
		clock-frequency = <400000>;

		pinctrl-names = "on_i2c";
		pinctrl-0 = <&hs_i2c0_bus>;

		fimc-is-3p8sp@2D {
		     compatible = "samsung,exynos5-fimc-is-cis-3p8sp";
		     reg = <0x10>; /* 1 bit right shift */
		     id = <1>; /* matching sensor id */
		     sensor_f_number = <190>; /* f number 1.9 */
		     setfile = "setB";
		     use_initial_ae; /* for initial AE of face unlock */
		};
	};

	hsi2c_3: hsi2c@138D0000 {
		gpios = <&gpc1 6 0 &gpc1 7 0>;
		status = "okay";
		clock-frequency = <400000>;
		samsung.tsda-su-fs = <0x36>;

		pinctrl-names = "on_i2c";
		pinctrl-0 = <&hs_i2c3_bus>;

		fimc-is-sr846@42 {
		     compatible = "samsung,exynos5-fimc-is-cis-sr846";
		     reg = <0x21>; /* 1 bit right shift */
		     id = <2>; /* matching sensor id */
		     sensor_f_number = <190>; /* f number 1.9 */
		     setfile = "setB";
		};
	};

	/* DISPAUD */
	pinctrl@148F0000 {
		aud_fm_bus: aud-fm-bus {
			samsung,pins = "gpb1-1", "gpb1-2", "gpb1-3";
			samsung,pin-function = <0>;
			samsung,pin-pud = <1>;
		};
	};

	pinctrl@139B0000 {
		spi2_bus: spi2-bus {
			samsung,pins = "gpc2-1", "gpc2-0";
			samsung,pin-function = <2>;
			samsung,pin-con-pdn = <3>;
			samsung,pin-pud = <1>;
			samsung,pin-pud-pdn = <0>;
			samsung,pin-drv = <0>;
		};

		spi2_bus_clk: spi2-bus-clk {
			samsung,pins = "gpc2-3";
			samsung,pin-function = <2>;
			samsung,pin-con-pdn = <3>;
			samsung,pin-pud = <0>;
			samsung,pin-pud-pdn = <0>;
			samsung,pin-drv = <0>;
			samsung,pin-val = <0>;
		};

		spi2_cs: spi2-cs {
			samsung,pins = "gpc2-2";
			samsung,pin-function = <2>;
			samsung,pin-con-pdn = <3>;
			samsung,pin-pud = <3>;
			samsung,pin-pud-pdn = <0>;
			samsung,pin-drv = <0>;
		};

		aud_dmic_on: aud_dmic_on {
			samsung,pins = "gpg2-1";
			samsung,pin-function = <1>;
			samsung,pin-con-pdn = <3>;
			samsung,pin-val = <1>;
		};

		aud_dmic_off: aud_dmic_off {
			samsung,pins = "gpg2-1";
			samsung,pin-function = <1>;
			samsung,pin-con-pdn = <3>;
			samsung,pin-val = <1>;
		};
	};

	spi_2: spi@13920000 {
		#address-cells = <1>;
		#size-cells = <0>;
		num-cs = <1>;

		/delete-property/ dma-mode;
		/delete-property/ dmas;
		/delete-property/ dma-names;

		pinctrl-names = "default";
		pinctrl-0 = <&spi2_bus &spi2_bus_clk &spi2_cs>;
		status = "okay";

		dbmd4_spi: dbmd4_interface@0 {
			compatible = "dspg,dbmd4-spi";
			reg = <0x0>;
			spi-max-frequency = <1000000>;
			read-chunk-size = <0x2000>;
			write-chunk-size = <0x40000>;

			interrupts = <2 0 0>;
			interrupt-parent = <&gpa0>;

			gpio-controller;
			#gpio-cells = <2>;

			controller-data {
				cs-gpio = <&gpc2 2 0>;
				samsung,spi-feedback-delay = <0>;
			};
		};
	};

	dbmdx_event {
		status = "okay";
		compatible = "samsung,dbmdx-event";
	};

	dbmdx-snd-soc-platform {
		compatible = "dspg,dbmdx-snd-soc-platform";
	};

	snd-dbmdx-mach-drv {
		compatible = "dspg,snd-dbmdx-mach-drv";
	};

	pinctrl@11CB0000 {
		dbmdx_int: dbmdx-int {
			samsung,pins = "gpa0-2";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
		};
	};

	pinctrl@139B0000 {
		dbmdx_wakeup: dbmdx-wakeup {
			samsung,pins ="gpg2-3";
			samsung,pin-function = <1>;
			samsung,pin-pud = <3>;
			samsung,pin-con-pdn =<3>;
			samsung,pin-pud-pdn = <3>;
			samsung,pin-val = <1>;
		};

		dbmdx_reset: dbmdx-reset {
			samsung,pins ="gpg2-2";
			samsung,pin-function = <1>;
			samsung,pin-pud = <3>;
			samsung,pin-con-pdn =<3>;
			samsung,pin-pud-pdn = <3>;
			samsung,pin-val = <1>;
		};
	};

	dbmdx {
		status = "okay";
		compatible = "dspg,dbmdx-codec";

		pinctrl-names = "default";
		pinctrl-0 = <&dbmdx_wakeup &dbmdx_reset>;

		sv-gpio = <&gpa0 2 0>; /* VOICE_INT */
		wakeup-gpio = <&gpg2 3 0>; /* VOICE_WAKE */
		reset-gpio = <&gpg2 2 0>; /* VOICE_RST */
		auto_buffering = <1>;
		cmd-interface = <&dbmd4_spi>;
		feature-va; /* enable VA */
		va-firmware-name = "dbmd4_va_fw.bin";
		va-config = <0x80000000
			     0x80000000
			     0x80000000
			     0x80290020
			     0x802210E0
			     0x80158E8E
			     0x801b0020
			     0x801A0011
			     0x80230001
			     0x80108017
			     0x80000000
			     0x80000000
			     0x80000000>;
		va-speeds = <0x0000 460800  0 4800000
			     0x0000 2000000 0 4800000
			     0x0000 3000000 0 4800000>;
		va-mic-config = <0xf041 0x1044 0x0008>;
		va-mic-mode = <0>;
		master-clk-rate = <32768>;
		/* constant-clk-rate = <32768>; */
		firmware_id = <0xdbd4>;
		use_gpio_for_wakeup = <1>; /* Use wakeup gpio */
		wakeup_set_value = <0>;  /* Value to write to wakeup gpio */
		auto_detection = <1>;
		detection_buffer_channels = <0>;
		min_samples_chunk_size = <128>;
		pcm_streaming_mode = <1>;
		boot_options = <0x200>; /* Verify chip id */
		send_uevent_after_buffering = <0>;
		detection_after_buffering = <0>;
		va_backlog_length = <1300>;
		va_backlog_length_okg = <1000>;
		send_uevent_on_detection = <1>;
		amodel_options = <0x3>;
	};

	abox_gic: abox_gic@0x14AF0000 {
		status = "okay";
	};

	i2c_3: i2c@13860000 {
		status = "okay";
		tfa98xx: tfa98xx@34 {
			compatible = "nxp,tfa98xx";
			#sound-dai-cells = <1>;
			reg = <0x34>;
		};
	};

	abox: abox@0x14A50000 {
		status = "okay";
		/* CAUTION:
		* "try to asrc off" quirk must be in dts.
		* It shouldn't be applied already audio tuned device,
		* because it changes delay and causes re-tune.
		*/
		/*
		* TODO: enable later
		*/
		/* quirks = "try to asrc off"; */

		abox_synchronized_ipc: abox_synchronized_ipc {
			compatible = "samsung,abox-synchronized-ipc";
			#sound-dai-cells = <1>;
			abox = <&abox>;
		};
	};

	dummy_audio_codec: audio_codec_dummy {
		status = "okay";
		compatible = "snd-soc-dummy";
	};

	sound {
		status = "okay";
		compatible = "samsung,exynos7885-cod3035";
		mic-bias-mode = <0 0 2 0>;
		clock-names = "xclkout";
		samsung,codec = <&abox>;

		samsung,routing =  "VOUTPUT", "ABOX UAIF0 Playback",
				 "VOUTPUTCALL", "ABOX UAIF2 Playback",
				 "ABOX UAIF2 Capture", "VINPUTCALL",
				 "ABOX SPEEDY Capture", "VINPUTFM",
				 // "SPK", "ABOX UAIF3 Playback",
				 // "ABOX UAIF3 Capture", "VI";
				 "SPK", "AIF Playback-8-34",
				 "AIF Playback-8-34", "ABOX UAIF3 Playback",
				 "ABOX UAIF3 Capture", "AIF Capture-8-34";

		rdma@0 {
			cpu {
				sound-dai = <&abox 0>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		rdma@1 {
			cpu {
				sound-dai = <&abox 1>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		rdma@2 {
			cpu {
				sound-dai = <&abox 2>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		rdma@3 {
			cpu {
				sound-dai = <&abox 3>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		rdma@4 {
			cpu {
				sound-dai = <&abox 4>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		rdma@5 {
			cpu {
				sound-dai = <&abox 5>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		rdma@6 {
			cpu {
				sound-dai = <&abox 6>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		rdma@7 {
			cpu {
				sound-dai = <&abox 7>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		wdma@0 {
			cpu {
				sound-dai = <&abox 8>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		wdma@1 {
			cpu {
				sound-dai = <&abox 9>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		wdma@2 {
			cpu {
				sound-dai = <&abox 10>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		wdma@3 {
			cpu {
				sound-dai = <&abox 11>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		wdma@4 {
			cpu {
				sound-dai = <&abox 12>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		uaif@0 {
			cpu {
				sound-dai = <&abox 13>;
			};
			codec {
				sound-dai = <&audio_codec_cod3035x>;
			};
		};
		uaif@1 {
			cpu {
				sound-dai = <&abox 14>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		uaif@2 {
			cpu {
				sound-dai = <&abox 15>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		uaif@3 {
			cpu {
				sound-dai = <&abox 16>;
			};
			platform {
				sound-dai = <&abox_synchronized_ipc 0>;
			};
			codec {
				sound-dai = <&tfa98xx 0>;
			};
		};
		internal@0 {
			cpu {
				sound-dai = <&abox 17>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
		speedy@0 {
			cpu {
				sound-dai = <&abox 18>;
			};
			codec {
				sound-dai = <&dummy_audio_codec>;
			};
		};
	};

	pinctrl@11CB0000 {
		nfc_int: nfc-int {
			samsung,pins = "gpa1-0";
			samsung,pin-function = <0>;
			samsung,pin-pud = <1>;
		};

		nfc_clk: nfc-clk {
			samsung,pins = "gpq0-0";
			samsung,pin-function = <2>;
			samsung,pin-pud = <0>;
		};
	};

	pinctrl@139B0000 {
		nfc_pvdd_en: nfc_pvdd_en {
				samsung,pins = "gpp6-4";
				samsung,pin-function = <1>;
				samsung,pin-pud = <0>;
				samsung,pin-val = <0>;
				samsung,pin-con-pdn = <3>;
				samsung,pin-pud-pdn = <0>;
		};

		nfc_firm: nfc_firm {
			samsung,pins = "gpp3-2";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-val = <0>;
			samsung,pin-con-pdn = <3>;
			samsung,pin-pud-pdn = <0>;
		};

		nfc_pd: nfc_pd {
			samsung,pins = "gpp2-2";
			samsung,pin-function = <2>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
			samsung,pin-con-pdn = <3>;
			samsung,pin-pud-pdn = <0>;
		};

		nfc_clk_req: nfc_clk_req {
			samsung,pins = "gpp2-3";
			samsung,pin-function = <2>;
			samsung,pin-pud = <1>;
			samsung,pin-drv = <0>;
			samsung,pin-con-pdn = <3>;
			samsung,pin-pud-pdn = <0>;
		};
	};
	i2c_2: i2c@13850000 {
		status = "okay";
		samsung,i2c-max-bus-freq = <400000>;
		sec-nfc@27 {
			compatible = "sec-nfc";
			reg = <0x27>;

			interrupts = <0 0 0>;
			interrupt-parent = <&gpa1>;

			sec-nfc,nfc_pd = <&gpp2 2 0x2>;
			sec-nfc,firm-gpio = <&gpp3 2 1>;
			sec-nfc,irq-gpio = <&gpa1 0 0>;
			sec-nfc,nfc_clkreq = <&gpp2 3 0x2>;
			sec-nfc,pvdd_en = <&gpp6 4 1>;
			clkctrl-reg = <0x11C8600C>;

			pinctrl-names = "default";
			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
		};
	};

	pinctrl@139B0000 {
		spi0_bus_ese: spi0-bus-ese {
			samsung,pins = "gpp5-3", "gpp5-2", "gpp5-0";
			samsung,pin-function = <2>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		spi0_ese_cs_gpio: spi0-ese-cs-gpio {
			samsung,pins = "gpp5-1";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		spi0_bus_ese_suspend: spi0-bus-ese-suspend {
			samsung,pins = "gpp5-3", "gpp5-2", "gpp5-1", "gpp5-0";
			samsung,pin-function = <0>;
			samsung,pin-pud = <1>;
			samsung,pin-drv = <0>;
		};
	};

	spi_0: spi@13900000 {
		status = "okay";
		/delete-property/ pinctrl-names;
		/delete-property/ pinctrl-0;

		ese_spi@0 {
			compatible = "ese_p3";
			reg = <0>;
			spi-max-frequency = <13000000>;
			gpio-controller;
			#gpio-cells = <2>;

			p3-vdd_1p8-gpio = <&gpg1 0 1>;
			ese_p3,cs-gpio = <&gpp5 1 0>;

			clocks = <&clock GATE_SPI0>, <&clock SPI_0>;
			clock-names = "pclk", "sclk";

			pinctrl-names = "ese_active", "ese_suspend";
			pinctrl-0 = <&spi0_bus_ese &spi0_ese_cs_gpio>;
			pinctrl-1 = <&spi0_bus_ese_suspend>;

			controller-data {
				samsung,spi-feedback-delay = <0>;
				samsung,spi-chip-select-mode = <0>;
			};
		};
	};

	pinctrl@139B0000 {
		ssp_ap_int: ssp-ap-int {
			samsung,pins = "gpg1-6";
			samsung,pin-function = <1>;
			samsung,pin-pud = <3>;
			samsung,pin-drv = <3>;
		};
		ssp_boot0: ssp-boot0 {
			samsung,pins = "gpg1-3";
			samsung,pin-function = <1>;
			samsung,pin-pud = <1>;
			samsung,pin-drv = <3>;
		};
		ssp_rst: ssp-rst {
			samsung,pins = "gpg3-5";
			samsung,pin-function = <1>;
			samsung,pin-pud = <1>;
			samsung,pin-drv = <3>;
			samsung,pin-pud-pdn = <0>;
		};

		spi4_clk: spi4-clk {
			samsung,pins = "gpp8-1";
			samsung,pin-function = <2>;
			samsung,pin-pud = <1>;
			samsung,pin-drv = <2>;
		};
		spi4_cs: spi4-cs {
			samsung,pins = "gpp8-0";
			samsung,pin-function = <2>;
			samsung,pin-pud = <3>;
			samsung,pin-drv = <2>;
		};
		spi4_miso: spi4-miso {
			samsung,pins = "gpp7-0";
			samsung,pin-function = <2>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <2>;
		};
		spi4_mosi: spi4-mosi {
			samsung,pins = "gpp7-1";
			samsung,pin-function = <2>;
			samsung,pin-pud = <1>;
			samsung,pin-drv = <2>;
		};
	};

	pinctrl@11CB0000 {
		ssp_mcu_int1: ssp-mcu-int1 {
			samsung,pins = "gpa1-2";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		ssp_mcu_int2: ssp-mcu-int2 {
			samsung,pins = "gpa1-3";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	mcu_ipc: mcu_ipc@12080000 {
		mcu,irq_affinity_mask = <3>;
	};

	argos {
		compatible = "samsung,argos";
		#address-cells = <1>;
		/*  The device number should be assigned for each device, e.g. "boot_device@1" and "boot_device@2".
		 * Duplicated number is not allowed. Please refer the below example.
		 */

		/* Table Format should be
		 * <Throughput(Mbps) ARM_min ARM_max KFC_min KFC_max MIF INT Task IRQ HMP_boost>
		 * ARM_min : Big Core's minimum frequency lock. 0 means not set,
		 * ARM_max : Big Core's maximum frequency lock. 0 means not set,
		 * KFC_min : Little Core's minimum frequency lock. 0 means not set,
		 * KFC_max : Little Core's maximum frequency lock. 0 means not set,
		 * MIF : MIF frequency lock. 0 means not set,
		 * INT : INT frequency lock. 0 means not set,
		 * Task : 1 - Set task affinity lock.
		 *	0 - Not set or unlock,
		 *		Task affinity should be predefined driver's code.
		 * IRQ : 1 - Set irq affinity lock.
		 *       0 - Not set or unlock,
		 *		Task affinity should be predefined driver's code.
		 * HMP_boots : 1 - Increase hmp boosting count
		 *             0 - Decrease hmp boosting count
		 */

		 boot_device@1 {
		 net_boost,label="WIFI TX";
		 net_boost,node="wlan0";
		 net_boost,table_size = <2>;
		 net_boost,table= <
		 	60 1144000 0 676000 0 0 0 0 0 0
		 	120 1560000 0 1586000 0 0 267000 0 0 0
		 	>;
		 };

		 boot_device@2 {
		 net_boost,label="WIFI RX";
		 net_boost,node="wlan0";
		 net_boost,table_size = <1>;
		 net_boost,table= <
		 	250 1352000 0 1352000 0 0 0 0 0 0
		 	>;
		 };

		 boot_device@3 {
			net_boost,label="IPC";
			net_boost,node="rmnet0 rmnet1 rmnet2 rmnet3 rmnet4 rmnet5 rmnet6 rmnet7 umts_dm0";
			net_boost,table_size = <4>;
			net_boost,table= <
				1   0 0 0 0 0 0 0 1 0
				50  0 0 1170000 0 1144000 0 0 1 0
				100 0 0 1378000 0 1539000 0 0 1 0
				150 0 0 1586000 0 1794000 0 0 1 0
				>;
		};

		boot_device@4 {
			net_boost,label="CLAT";
			net_boost,node="clat clat4 v4-rmnet0 v4-rmnet1 v4-rmnet2 v4-rmnet3 v4-rmnet4 v4-rmnet5 v4-rmnet6 v4-rmnet7";
			net_boost,table_size = <3>;
			net_boost,table= <
				20  0 0 1170000 0 1539000 0 0 0 0
				50  0 0 1378000 0 1539000 0 0 0 0
				100 0 0 1586000 0 1794000 0 0 0 0
				>;
		};

		boot_device@5 {
			net_boost,label="USB";
			net_boost,node="rndis0";
			net_boost,table_size = <1>;
			net_boost,table= < 0 0 0 0 0 0 0 0 1 0 >;
		};

		/*
		 * boot_device@9 {
		 *	net_boost,label="WIFI RX";
		 *	net_boost,node="wlan0";
		 *	net_boost,table_size = <4>;
		 *	net_boost,table= <
		 *		5  2002000 0 1690000 0 0 0 0 0 0
		 *		10 2002000 0 1690000 0 0 0 0 0 0
		 *		20 2002000 0 1690000 0 845000 400000 1 1 1
		 *		30 2002000 0 1690000 0 1352000 533000 1 1 1
		 *		>;
		 * };
		 */
	};

	nad_balancer {
		compatible = "samsung,sec_nad_balancer";
		status = "okay";

		nad_balancer,timeout = <400>;

			qos {
				cl0 {
					qos,label="LIT";
					qos,delay_time=<9>;
					qos,table_size=<12>;
					qos,table=<1586000 1482000 1352000 1248000 1144000 1014000 902000 839000 757000
						676000 546000 449000>;
				};

				cl1 {
					qos,label="BIG";
					qos,delay_time=<8>;
					qos,table_size=<11>;
					qos,table=<2184000 2080000 1976000 1872000 1768000 1664000 1560000 1352000 1144000
						936000 728000>;
				};

				mif {
					qos,label="MIF";
					qos,delay_time=<10>;
					qos,table_size=<8>;
					qos,table=<1794000 1539000 1352000 1014000 845000 676000 546000 420000>;
				};
			};

            sleep {
                /* per msec */
                sleep,suspend_threshold = <1000>;
                sleep,resume_threshold = <1000>;
            };
	};
};

